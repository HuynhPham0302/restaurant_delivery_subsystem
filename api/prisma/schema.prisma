generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Profile {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String?
  role       String   @default("user")
  avatar     String?
  provider   String   @default("local")
  is_deleted Boolean  @default(false)
  is_blocked Boolean  @default(false)
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model User {
  id           Int       @id @default(autoincrement())
  fullName     String
  username     String?
  phone_number String?   @unique
  address      String?
  birth_date   DateTime?
  gender       String?
  profile      Profile?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  Cart         Cart[]
  Order        Order[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  type        String
  description String?   @db.LongText
  image       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Product     Product[]
}

model Product {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  description String?          @db.LongText
  image_cover String
  meta        Json?
  brand       String?
  sku         String
  slug        String
  is_deleted  Boolean          @default(false)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  category    Category         @relation(fields: [category_id], references: [id])
  category_id Int
  items       Product_item[]
  images      Product_images[]
}

model Product_item {
  id          Int         @id @default(autoincrement())
  type        String
  description String?     @db.LongText
  price       Float
  is_discount Boolean     @default(false)
  discount    Float       @default(0)
  stock       Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  product     Product     @relation(fields: [product_id], references: [id])
  product_id  Int
  CartItem    CartItem[]
  OrderItem   OrderItem[]
}

model Product_images {
  id         Int      @id @default(autoincrement())
  url        String
  product    Product  @relation(fields: [product_id], references: [id])
  product_id Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Cart {
  id        Int        @id @default(autoincrement())
  user_id   Int
  user      User       @relation(fields: [user_id], references: [id])
  status    String     @default("active")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  CartItem  CartItem[]
}

model CartItem {
  id              Int          @id @default(autoincrement())
  cart            Cart         @relation(fields: [cart_id], references: [id])
  cart_id         Int
  product_item    Product_item @relation(fields: [product_item_id], references: [id])
  product_item_id Int
  quantity        Int
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

model Order {
  id           Int         @id @default(autoincrement())
  user         User        @relation(fields: [user_id], references: [id])
  user_id      Int
  status       String      @default("pending")
  total_price  Float
  fullName     String
  email        String?
  address      String
  phone_number String
  postal_code  String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  OrderItem    OrderItem[]
}

model OrderItem {
  id              Int          @id @default(autoincrement())
  order           Order        @relation(fields: [order_id], references: [id])
  order_id        Int
  product_item    Product_item @relation(fields: [product_item_id], references: [id])
  product_item_id Int
  quantity        Int
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}
