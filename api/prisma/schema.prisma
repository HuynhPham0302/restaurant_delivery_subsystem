generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Profile {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String?
  role       String   @default("user")
  avatar     String?
  provider   String   @default("local")
  is_deleted Boolean  @default(false)
  is_blocked Boolean  @default(false)
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model User {
  id           Int       @id @default(autoincrement())
  fullName     String
  username     String    @unique
  phone_number String?   @unique
  address      String?
  birth_date   DateTime?
  gender       String?
  profile      Profile?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  image       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Product     Product[]
}

model Product {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  description String?
  meta        Json?
  slug        String
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  category    Category         @relation(fields: [categoryId], references: [id])
  categoryId  Int
  items       Product_item[]
  images      Product_images[]
}

model Product_item {
  id          Int      @id @default(autoincrement())
  type        String
  description String?
  price       Float
  is_discount Boolean  @default(false)
  discount    Float    @default(0)
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int
}

model Product_images {
  id        Int      @id @default(autoincrement())
  url       String
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
